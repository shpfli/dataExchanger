/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Hubery' at '16-11-25 下午3:12' with Gradle 2.14
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/

apply plugin: 'java'
apply plugin: 'war' //用来生成war
apply plugin: 'eclipse-wtp' //用来生成Eclipseweb项目的插件（web-tool-platform）
apply plugin: 'jetty' //在项目中嵌入jetty服务器
version = '1.0' //property
 
// Uses JDK 7
sourceCompatibility = 1.8
targetCompatibility = 1.8
 
 
// 1. Get dependencies from Maven local repository
// 2. Get dependencies from Maven central repository
repositories {
	mavenLocal()
	jcenter()
	mavenCentral()
}
 
//Project dependencies
dependencies {
	//include in compile only, exclude in the war
	providedCompile 'javax.servlet:servlet-api:2.5'
	
	compile 'commons-dbcp:commons-dbcp:1.4'
	compile 'com.oracle.jdbc.driver:ojdbc7:12c'
}

//编译时使用UTF-8，解决编译时的乱码问题
tasks.withType(JavaCompile) { 
	options.encoding = "UTF-8" 
}

httpPort = 8080
stopPort = 9451
stopKey = "stop"

[jettyRun, jettyRunWar]*.with {
    contextPath = 'dataExchanger'
	//jettyEnvXml =  file("src/config/jetty-web.xml");
    //webDefaultXml  =  file("src/config/jetty-webdefault.xml");
}
